import{_ as s,c as n,a as e,o as i}from"./app-D9oilhFN.js";const l={};function r(t,a){return i(),n("div",null,[...a[0]||(a[0]=[e(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>DataFlex 是一个基于 <a href="https://github.com/hiyouga/LLaMA-Factory" target="_blank" rel="noopener noreferrer">LlamaFactory</a> 的高级动态训练框架。它通过在训练过程中智能地调度数据，支持<strong>动态样本选择</strong>、<strong>领域配比调整</strong>和<strong>动态权重分配</strong>，旨在提升模型训练的效率与最终效果。</p><h3 id="设计理念" tabindex="-1"><a class="header-anchor" href="#设计理念"><span>设计理念</span></a></h3><p>DataFlex 的核心设计理念是：<strong>以数据为中心的智能训练调度</strong>。传统的训练方法通常采用固定的数据顺序和配比，而 DataFlex 允许模型在训练过程中根据其当前状态动态调整数据使用策略，从而实现更高效的学习。其设计思想是与 LlamaFactory 无缝集成，为研究者和开发者提供更灵活、更强大的训练控制能力。</p><h2 id="核心架构" tabindex="-1"><a class="header-anchor" href="#核心架构"><span>核心架构</span></a></h2><h3 id="整体架构图" tabindex="-1"><a class="header-anchor" href="#整体架构图"><span>整体架构图</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>┌─────────────────────────────────────────────────────────────┐</span></span>
<span class="line"><span>│                      LlamaFactory 框架                      │</span></span>
<span class="line"><span>├─────────────────────────────────────────────────────────────┤</span></span>
<span class="line"><span>│              模型管理 · 数据处理 · 优化器等基础组件              │</span></span>
<span class="line"><span>├─────────────────────────────────────────────────────────────┤</span></span>
<span class="line"><span>│                                                             │</span></span>
<span class="line"><span>│    训练层 (DataFlex 替换 LlamaFactory 原始训练器)             │</span></span>
<span class="line"><span>│  ┌─────────────────┬─────────────────┬─────────────────────┐ │</span></span>
<span class="line"><span>│  │  Select Trainer │   Mix Trainer   │  Weight Trainer     │ │</span></span>
<span class="line"><span>│  │  (动态样本选择)  │   (动态配比)     │   (动态权重)        │ │</span></span>
<span class="line"><span>│  ├─────────────────┼─────────────────┼─────────────────────┤ │</span></span>
<span class="line"><span>│  │  Selector 组件  │   Mixer 组件    │  Weighter 组件      │ │</span></span>
<span class="line"><span>│  │ ┌─────────────┐ │ ┌─────────────┐ │ ┌─────────────────┐ │ │</span></span>
<span class="line"><span>│  │ │Loss Selector│ │ │Random Mixer │ │ │ Loss Weighter   │ │ │</span></span>
<span class="line"><span>│  │ │LESS Selector│ │ │Custom Mixer │ │ │ Custom Weighter │ │ │</span></span>
<span class="line"><span>│  │ │ Custom...   │ │ │   ...       │ │ │    ...          │ │ │</span></span>
<span class="line"><span>│  │ └─────────────┘ │ └─────────────┘ │ └─────────────────┘ │ │</span></span>
<span class="line"><span>│  └─────────────────┴─────────────────┴─────────────────────┘ │</span></span>
<span class="line"><span>└─────────────────────────────────────────────────────────────┘</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="组件层次结构" tabindex="-1"><a class="header-anchor" href="#组件层次结构"><span>组件层次结构</span></a></h3><p>DataFlex 采用模块化设计，主要包含以下层次：</p><ol><li><strong>基础层 (LlamaFactory)</strong>：提供模型管理、数据处理、优化器等基础组件</li><li><strong>训练器层 (DataFlex Trainers)</strong>：<strong>替换</strong> LlamaFactory 原始训练器，实现三种动态训练模式</li><li><strong>策略组件层 (Components)</strong>：提供具体的数据处理策略（Selector/Mixer/Weighter）</li><li><strong>注册系统 (Registry)</strong>：管理组件的注册和加载</li></ol><p><strong>关键特点</strong>：DataFlex 不是在 LlamaFactory 上添加新层，而是<strong>无缝替换</strong>其训练层，保持原有基础功能的同时增强训练能力。</p><h2 id="三大核心训练器概念" tabindex="-1"><a class="header-anchor" href="#三大核心训练器概念"><span>三大核心训练器概念</span></a></h2><p>DataFlex 提供了三大核心训练器，它们都可以无缝接入 LlamaFactory 的训练流程：</p><ul><li><strong>Select Trainer (动态选择训练器)</strong>: 在训练过程中，根据预设策略（Selector）动态地从数据集中挑选出一部分样本用于接下来的训练，例如优先训练模型认为&quot;难&quot;的样本。</li><li><strong>Mix Trainer (动态配比训练器)</strong>: 支持在训练中动态调整不同来源或领域数据的混合比例。</li><li><strong>Weight Trainer (动态加权训练器)</strong>: 支持在训练中动态调整样本反向传播时的权重，增大模型偏好的数据的学习力度。</li></ul><h2 id="使用示例" tabindex="-1"><a class="header-anchor" href="#使用示例"><span>使用示例</span></a></h2><p>启动训练的命令与 LlamaFactory 非常相似。以下是一个使用 LESS 的示例，具体原理参考论文 <a href="https://arxiv.org/abs/2402.04333" target="_blank" rel="noopener noreferrer">https://arxiv.org/abs/2402.04333</a>：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">FORCE_TORCHRUN</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">1</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> DISABLE_VERSION_CHECK</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">1</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> dataflex-cli</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> train</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> examples/train_lora/selectors/less.yaml</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>注意</strong>：与标准 LlamaFactory 不同，您的 <code>.yaml</code> 配置文件中除了需要包含 LlamaFactory 的标准训练参数外，还必须指定 DataFlex 的特定参数。</p><h2 id="与-llamafactory-的集成" tabindex="-1"><a class="header-anchor" href="#与-llamafactory-的集成"><span>与 LlamaFactory 的集成</span></a></h2><p>DataFlex 完全兼容 LlamaFactory 的配置和使用方式：</p><ol><li><strong>配置兼容</strong>：在 LlamaFactory 配置基础上添加 DataFlex 参数</li><li><strong>命令一致</strong>：使用 <code>dataflex-cli</code> 替代 <code>llamafactory-cli</code></li><li><strong>功能保持</strong>：支持所有 LlamaFactory 的原有功能</li><li><strong>无缝切换</strong>：可以通过 <code>train_type: static</code> 回退到原始训练模式</li></ol><p>这种设计确保了用户可以渐进式地采用 DataFlex 的功能，无需对现有工作流进行大幅修改。</p>`,22)])])}const o=s(l,[["render",r]]),c=JSON.parse('{"path":"/zh/guide/basicinfo/framework/","title":"框架设计","lang":"zh-CN","frontmatter":{"title":"框架设计","icon":"material-symbols:auto-transmission-sharp","createTime":"2025/06/13 14:59:56","permalink":"/zh/guide/basicinfo/framework/"},"readingTime":{"minutes":2.76,"words":828},"git":{"createdTime":1758865024000,"updatedTime":1759047473000,"contributors":[{"name":"Hao Liang","username":"","email":"hao.liang@stu.pku.edu.cn","commits":2,"avatar":"https://gravatar.com/avatar/105bae3e8661728b9f2f5440992b04f5f28459b66a049d09b52213ce1438f6bc?d=retro"},{"name":"zzy1127","username":"zzy1127","email":"67784246+zzy1127@users.noreply.github.com","commits":1,"avatar":"https://avatars.githubusercontent.com/zzy1127?v=4","url":"https://github.com/zzy1127"}]},"filePathRelative":"zh/notes/guide/basicinfo/framework.md","headers":[]}');export{o as comp,c as data};
